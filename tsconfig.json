// Good setup explanations:
// https://www.typescriptlang.org/docs/handbook/react-&-webpack.html
// https://blog.angularindepth.com/configuring-typescript-compiler-a84ed8f87e3
// http://www.westerndevs.com/javascript/How-to-Compile-TypeScript-into-a-Single-File-with-SystemJS-Modules-with-Gulp/
{
    "compilerOptions": {
      /* Basic Options */
      "target": "es5",                            /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'. */
      "module": "commonjs",                       /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
      "lib": ["es2017", "dom"],                   /* Specify library files to be included in the compilation:  */
      "rootDir": "./src",                         /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
      "jsx": "react",                          /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
      "outDir": "dist/",                          /* Redirect output structure to the directory. */
      "sourceMap": true,                          /* Generates corresponding '.map' file. */
      // "allowJs": true,                         /* Allow javascript files to be compiled. */
      // "checkJs": true,                         /* Report errors in .js files. */
      "declaration": true,                        /* Generates corresponding '.d.ts' file. */
      // "outFile": "./index.js",                 /* Concatenate and emit output to single file. */
      // "removeComments": true,                  /* Do not emit comments to output. */
      // "noEmit": true,                          /* Do not emit outputs. */
      "importHelpers": true,                      /* Import emit helpers from 'tslib'. */
      // "downlevelIteration": true,              /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
      // "isolatedModules": true,                 /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
      "pretty": true,                             /* Stylize errors and messages using color and context (experimental). */
      "resolveJsonModule": true,
  
      /* -- Strict Type-Checking Options -- */
      "alwaysStrict": true,                       /* Parse in strict mode and emit "use strict" for each source file. */
      "noImplicitAny": true,                      /* Raise error on expressions and declarations with an implied 'any' type. */
      "noImplicitThis": true,                     /* Raise error on 'this' expressions with an implied 'any' type. */
      "strict": true,                             /* Enable all strict type-checking options. */
      "strictFunctionTypes": true,                /* Enable strict checking of function types. */
      "strictNullChecks": true,                   /* Enable strict null checks. */
      "strictPropertyInitialization": true,       /* Ensure non-undefined class properties are initialized in the constructor. */
      // "noStrictGenericChecks": true,           /* Disable strict checking of generic signatures in function types. */
      
  
      /* -- Additional Checks -- */
      "noFallthroughCasesInSwitch": false,        /* Report errors for fallthrough cases in switch statement. */
      "noImplicitReturns": true,                  /* Report error when not all code paths in function return a value. */
      "noUnusedLocals": true,                     /* Report errors on unused locals. */
      "noUnusedParameters": true,                 /* Report errors on unused parameters. */
      
      /* Module Resolution Options */
      "moduleResolution": "node",                 /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
      // "baseUrl": "./src",                      /* Base directory to resolve non-absolute module names. */
      // "paths": {
      //   "@util": ["./util"]
      // },                                       /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      // "rootDirs": [],                          /* List of root folders whose combined content represents the structure of the project at runtime. */
      // "typeRoots": ["./node_modules/"],        /* List of folders to include type definitions from. */
      // "types": [],                             /* Type declaration files to be included in compilation. */
      // "allowSyntheticDefaultImports": true,    /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
      // "preserveSymlinks": false,               /* Do not resolve the real path of symlinks. */
  
      /* Source Map Options */
      // "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */
      // "mapRoot": "./dist/maps/",             /* Specify the location where debugger should locate map files instead of generated locations. */
      // "inlineSourceMap": true,                  /* Emit a single file with source maps instead of having a separate file. */
      // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
  
      /* Experimental Options */
      // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
      // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
  
      
    },
    // "files": [
    //   "./src/**/*"
    // ],
    "include": [
      "./src/**/*"
    ],
    "exclude": [
      "node_modules"
    ]
  }